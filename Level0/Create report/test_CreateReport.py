# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support.ui import Select
class TestCreateReport():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.driver.set_window_size(800, 800)
    self.driver.get('https://school.moodledemo.net/login/index.php')    
    self.driver.find_element(By.ID, "username").send_keys('manager')
    self.driver.find_element(By.ID, "password").send_keys('moodle2024')
    self.driver.find_element(By.ID, "loginbtn").click()

  def teardown_method(self, method):
    time.sleep(2)
    self.driver.find_element(By.ID, "user-menu-toggle").click()
    self.driver.find_element(By.LINK_TEXT, "Log out").click()
    self.driver.quit()

  
  def test_tC009001(self):
    try: 
      self.driver.get("https://school.moodledemo.net/reportbuilder/index.php")
      self.driver.find_element(By.XPATH, "//section/div/div/button").click()
      time.sleep(2)
      wait = WebDriverWait(self.driver, 20)  # Chờ tối đa 20 giây
      wait.until(EC.presence_of_element_located((By.XPATH, "//form/div[2]/div[2]/input"))).send_keys("abc")
      source_dropdown = self.driver.find_element(By.XPATH, "//form/div[3]/div[2]/select")
      source_dropdown.click()
      select = Select(source_dropdown)
      select.select_by_visible_text("Notes")
      save_button = self.driver.find_element(By.XPATH, "//div[3]/button[2]")
      save_button.click()
      wait = WebDriverWait(self.driver, 20)
      report_name = wait.until(EC.presence_of_element_located((By.XPATH, "//*[@id='region-main']/div/nav/div/h1")))
      assert report_name.text == "abc"
      time.sleep(1)
      self.driver.find_element(By.LINK_TEXT, "Close").click()
      return True
    except Exception as e:
      return False

  def test_tC009002(self):
    try: 
      self.driver.get("https://school.moodledemo.net/reportbuilder/index.php")
      self.driver.find_element(By.XPATH, "//section/div/div/button").click()
      time.sleep(2)
      source_dropdown = self.driver.find_element(By.XPATH, "//form/div[3]/div[2]/select")
      source_dropdown.click()
      
      select = Select(source_dropdown)
      select.select_by_visible_text("Notes")

      save_button = self.driver.find_element(By.XPATH, "//div[3]/button[2]")
      save_button.click()
      time.sleep(2)
      
      wait = WebDriverWait(self.driver, 10)
      report_name = wait.until(EC.presence_of_element_located((By.XPATH, "//div[@data-region='body']/form/div[2]/div[2]/div")))
      assert report_name.text == "- You must supply a value here."
      self.driver.find_element(By.XPATH, "//button[@data-action='cancel']").click()
      return True
    except Exception as e:
      print("error: ", e)
      self.driver.get("https://school.moodledemo.net/my/courses.php")
      return False

  def test_tC009003(self):
    try: 
      self.driver.get("https://school.moodledemo.net/reportbuilder/index.php")
      self.driver.find_element(By.XPATH, "//section/div/div/button").click()

      wait = WebDriverWait(self.driver, 20)  
      wait.until(EC.presence_of_element_located((By.XPATH, "//form/div[2]/div[2]/input"))).send_keys("abc")

      save_button = self.driver.find_element(By.XPATH, "//div[3]/button[2]")
      save_button.click()
      time.sleep(2)
      
      wait = WebDriverWait(self.driver, 10)
      report_name = wait.until(EC.presence_of_element_located((By.XPATH, "//div[@data-region='body']/form/div[3]/div[2]/div")))
      assert report_name.text == "- You must supply a value here."
      
      self.driver.find_element(By.XPATH, "//button[@data-action='cancel']").click()
      return True
    except Exception as e:
      print("error: ", e)
      self.driver.get("https://school.moodledemo.net/my/courses.php")
      return False

  def test_tC009004(self):
    try: 
      self.driver.get("https://school.moodledemo.net/reportbuilder/index.php")
      self.driver.find_element(By.XPATH, "//section/div/div/button").click()
      time.sleep(2)   
      save_button = self.driver.find_element(By.XPATH, "//div[3]/button[2]")
      save_button.click()
      
      wait = WebDriverWait(self.driver, 10)
      report_name = wait.until(EC.presence_of_element_located((By.XPATH, "//div[@data-region='body']/form/div[3]/div[2]/div")))
      report_name2 = wait.until(EC.presence_of_element_located((By.XPATH, "//div[@data-region='body']/form/div[2]/div[2]/div")))
      assert report_name.text == "- You must supply a value here."
      assert report_name2.text == "- You must supply a value here."
      self.driver.find_element(By.XPATH, "//button[@data-action='cancel']").click()
      return True
    except Exception as e:
      print("error: ", e)
      self.driver.get("https://school.moodledemo.net/my/courses.php")
      return False

  def test_tC009005(self):
    try: 
      self.driver.get("https://school.moodledemo.net/reportbuilder/index.php")
      self.driver.find_element(By.XPATH, "//section/div/div/button").click()
      time.sleep(2)
      self.driver.find_element(By.XPATH, "//button[@data-action='cancel']").click()

      return True
    except Exception as e:
      print("error: ", e)
      self.driver.get("https://school.moodledemo.net/my/courses.php")
      return False

  def test_tC009006(self):
    try:
      self.driver.get("https://school.moodledemo.net/my/courses.php")
      time.sleep(2)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      time.sleep(2)
      self.driver.find_element(By.LINK_TEXT, "Log out").click()

      self.driver.get('https://school.moodledemo.net/login/index.php')  
      time.sleep(2)
      self.driver.find_element(By.ID, "username").clear()
      self.driver.find_element(By.ID, "username").send_keys('student')
      self.driver.find_element(By.ID, "password").send_keys('moodle2024')
      self.driver.find_element(By.ID, "loginbtn").click()
      time.sleep(2)  

      self.driver.get("https://school.moodledemo.net/reportbuilder/index.php")

      wait = WebDriverWait(self.driver, 10)
      report_name = wait.until(EC.presence_of_element_located((By.XPATH, "//div[@data-region='core_table/dynamic']/div[1]")))

      assert report_name.text == "Nothing to display"
      
      self.driver.get("https://school.moodledemo.net/my/courses.php")
      time.sleep(2)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      time.sleep(2)
      self.driver.find_element(By.LINK_TEXT, "Log out").click()

      self.driver.get('https://school.moodledemo.net/login/index.php')   
      self.driver.find_element(By.ID, "username").clear() 
      self.driver.find_element(By.ID, "username").send_keys('manager')
      self.driver.find_element(By.ID, "password").send_keys('moodle2024')
      self.driver.find_element(By.ID, "loginbtn").click()
      return True
    except Exception:
      return False

  def test_tC009007(self):
    try: 
      self.driver.get("https://school.moodledemo.net/reportbuilder/index.php")
      self.driver.find_element(By.XPATH, "//section/div/div/button").click()
      wait = WebDriverWait(self.driver, 20)
      wait.until(EC.presence_of_element_located((By.XPATH, "//form/div[2]/div[2]/input"))).send_keys("abc")
      source_dropdown = self.driver.find_element(By.XPATH, "//form/div[3]/div[2]/select")
      source_dropdown.click()
      select = Select(source_dropdown)
      select.select_by_visible_text("Notes")

      time.sleep(2)  
      self.driver.execute_script("window.open()")  
      windows = self.driver.window_handles
      
      self.driver.switch_to.window(windows[1])       
      self.driver.get("https://school.moodledemo.net/my/courses.php")
      time.sleep(2)
      self.driver.find_element(By.ID, "user-menu-toggle").click()
      time.sleep(2)
      self.driver.find_element(By.LINK_TEXT, "Log out").click()
      time.sleep(2)
      self.driver.switch_to.window(windows[0])

      time.sleep(2)   
      save_button = self.driver.find_element(By.XPATH, "//div[3]/button[2]")
      save_button.click()

      time.sleep(2)  
      wait = WebDriverWait(self.driver, 10)
      report_name = wait.until(EC.presence_of_element_located((By.XPATH, "//div[@class='moodle-exception-message']")))

      assert report_name.text == "Your session has most likely timed out. Please log in again."

      time.sleep(5)
      self.driver.get('https://school.moodledemo.net/login/index.php')  
      time.sleep(2)
      self.driver.find_element(By.ID, "password").send_keys('moodle2024')
      self.driver.find_element(By.ID, "loginbtn").click()
      time.sleep(3)  
      self.driver.get("https://school.moodledemo.net/my/courses.php")
      return True
    except Exception as e:
      print("error: ", e)
      self.driver.get("https://school.moodledemo.net/my/courses.php")
      return False

  def test_tC009008(self):
    try: 
      self.driver.get("https://school.moodledemo.net/reportbuilder/index.php")
      self.driver.find_element(By.XPATH, "//section/div/div/button").click()
      time.sleep(2)
      wait = WebDriverWait(self.driver, 20)  
      wait.until(EC.presence_of_element_located((By.XPATH, "//form/div[2]/div[2]/input"))).send_keys("abc")

      self.driver.find_element(By.XPATH, "//form/div[4]/div[2]/div[1]/input[2]").click()
      time.sleep(5)
      source_dropdown = self.driver.find_element(By.XPATH, "//form/div[3]/div[2]/select")
      source_dropdown.click()
      select = Select(source_dropdown)
      select.select_by_visible_text("Notes")
      time.sleep(5)
      save_button = self.driver.find_element(By.XPATH, "//div[3]/button[2]")
      save_button.click()
      wait = WebDriverWait(self.driver, 20)
      report_name = wait.until(EC.presence_of_element_located((By.XPATH, "//*[@id='region-main']/div/nav/div/h1")))
      report_name2 = wait.until(EC.presence_of_element_located((By.XPATH, "/html/body/div[2]/div[2]/div/div/section/div/div/div/div[1]/div/div/div[2]/div/div[2]/div/div[2]")))
      assert report_name.text == "abc"
      assert report_name2.text == "Nothing to display"
      time.sleep(1)
      self.driver.find_element(By.LINK_TEXT, "Close").click()
      return True
    except Exception as e:
      return False

  

  def run(self):
    self.setup_method(None)

    test_list = [
      self.test_tC009001,
      self.test_tC009002,
      self.test_tC009003,
      self.test_tC009004,
      self.test_tC009005,
      self.test_tC009006,
      self.test_tC009007,
      self.test_tC009008
    ]

    results = [test() for test in test_list]

    fail_test_names = []
    for i in range(0, len(results)):
      if not results[i]:
        fail_test_names.append(test_list[i].__name__)

    fail_test_str = ("FAILED:\n\t" + "\n\t".join(name for name in fail_test_names) + "\n") if len(fail_test_names) > 0 else ""
    print(f"\n-- Test Create Report (Level 0) --\nPASSED: {results.count(True)}/{len(results)}\n{fail_test_str}")
    
    self.teardown_method(None)

TestCreateReport().run()
